----------------------------
命名空间					|
----------------------------
	# 让模板引擎有点儿模块化的意思
		* 每一次 模板的执行过程, 它都有一个私有的命名空间的集合
		* 每一次模板执行工作都是一个分离且有序的过程,它们仅仅存在一段很短的时间,同时页面用以渲染内容,然后就和所有填充过的命名空间一起消失了
		* 因此,无论何时我们说第一次调用 import,一个单一模板执行工作的内容都是这样

	# 一个模板文件中的所有内容,其实都是变量:宏,函数,变量
	# 定义一个库 :lib.ftl
		<#macro foo>
			<p>Im Foo</p>
		</#macro>
		<#assign name="KevinBlandy">
	
	# 在其他模板引擎中引入,使用
		*  通过 as 关键字取别名,通过别名引用库中的变量
					
		<#import "/lib/lib.ftl" as lib>
		<@lib.foo/>
		${lib.name}
				
		
	# 修改import的模板中的变量

		<#import "/lib/my_test.ftl" as my>
		${my.mail}

		<#assign mail="jsmith@other.com" in my>
		${my.mail}

		* #assign 指令,可以通过 in 指定别名,来设置要修改的命名空间
	
	# 数据模型中的变量在任何位置都是可见的
		*  import 的模板中也是可以访问该变量的 ${name}
	
	# 命名空间的生命周期
		* 多次 import,那么只会为第一次 import 引用创建命名空间并执行模板
		* 多次 import 的都是同一个模板,任何修改,都会影响

