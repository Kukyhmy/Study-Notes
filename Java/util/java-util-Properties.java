-------------------------
java.util.Properties	 |
-------------------------
	# 是hashtable的子类。
	# 也就是说它具备map集合的特点。而且它里面存储的键值对都是字符串。
	# 是集合中与IO技术相结合的集合容器。
	# 该对象的特点：可以用于键值对形式的配置文件。
	# 那么在加载数据时。要有固定格式
		键=值
	# 把info文件的键值数据存到集合中的操作
		1,用一个流和info文件关联
		2,读取一行数据，讲该行数据用"="进行切割
		3,"="左边作为键，右边作为值。存储到 Properties 集合中。
-------------------------
实例方法/字段			 |
-------------------------
	Properties p = new Properties();
	p.getProperty(String key);
		|--根据指定的键，获取对应的值。
	p.load(输入流);
		|--从一个输入流(配置文件的流)中获取键值对(加载进 Properties)。
	p.store(输出流,注释信息)
		|--把内存中 Properties 的键值对。写进输出流。可以加上后面的注释信息。
	p.store(输出流,"注释信息");
		|--把配置写进输出流(配置文件的流)。后面可以添加字符串类型的注释。
	p.getProperty(key) 
		|--根据指定的键获取对应的值(String)。
	p.list(输出打印流) 
		 |--将属性列表输出到指定的输出流。
	p.setProperty(键，值);
		|--根据指定的键位，修改指定的值。如果键不存在。就新建。
	p.stringPropertyNames();
		|--返回此列表中的键集(不包含值)。返回的是 Set<String> 类型的集合。