JDK1.5之后出现的新特性
1,,泛型――单独列出笔记作为说明
2,增强 for 循环。也就是 foreach   
for(数据类型 变量名 : 被遍历的集合(Collection)或者数组)
{
	
}
它只能获取元素。不能对元素进行操作。迭代器如不仅能取出，还能进行其他的操作。
传统 for 和增强 for 的区别就是
增强for必须要有被遍历的对象。而传统for循环不需要。这是增强for的一个局限性。
3,可变参数
	所谓的可变参数。。。懂其意。
	反正使用它的时候。'注意'，可变参数一定定义在参数列表的最后面！
public static void demo(int... arr)
{

}
4,静态导入
如果一个类。里面全是静态方法。可以直接导入所有的方法进来。在使用的时候。直接用方法。就不用[类名.方法].
在JAVA最顶部声明
import static java.包明.类名.*;
当 import 后面跟上 static 以后。你导入的。都是一个类中的所有。静态成员。
'注意'当方法重名的时候。必须要加上类名。例如
Object 里面有 toString(); 这个方法。 Arrays 里面也有toString();这个方法。
在使用 Arrays.toString();方法的时候一定要写上 Arrays 。也就是要写全。不然会报错，或者发生错误！
5,枚举
	若枚举只有一个成员，则可以作为一种单例模式的实现方式。
枚举类的创建：
1,提供类的属性，声明为 private final
2,声明为 final 的属性在构造器中初始化
3,创建枚举类对象，将对象声明为 public static final
---------------------------------------------------------------------------------
enum  --通过该关键字来创建枚举类。，替换掉 class 
	|--JDK1.5版本后新增的关键字。用于定义枚举通过公共方法来调用属性
此关键字用于表示一个类。跟 class 一样！被它标识的类，就是一个枚举类。
1,必须在此类的第一项就建立对象，格式：对象1(参数1，参数2),对象2(参数1，参数2),对象3(参数1，参数2);
类名.values();
	|--返回的是一个该类的数组集合，里面包含了该类的所有枚举对象。
类名.valueOf(String);
	|--返回的是指定名称的对象.String 用来指定对象的名字。只能写已经存在对象名，乱写，会报错。
---注意事项
定义枚举类用关键字 enum
所有的枚举类都是 Enum 的子类
枚举类的第一行必须是枚举项，最后一个枚举项后的分好可以省略，但是如果枚举类有其他的东西，这个分号就不能省略，建议不要省略
枚举类可以有构造器。但必须是 private 的。它默认的也是 private 的。枚举项的用法比较特殊:
枚举("");
枚举也可以有构造方法。但是枚举项必须重写该方法。
-------
当枚举类中出现抽象方法的时候。需要在每个实例上都实现抽象方法
例：
enum Test{
	BLUE{
		public void show(){
			System.out.println("blue");
		}
	},
	RED{
		public void show(){
			System.out.println("red");
		}
	},
	YELLOW{
		public void show(){
			System.out.println("yellow");
		}
	},
	PINK{
		public void show(){
			System.out.println("pink");
		}
	};
	abstract void show();
}
/***************************************************************************/
自动拆装箱
