内部类的访问规则
1，内部类可以直接访问外部类中的成员。包括私有。
    之所以就可以直接访问外部类中的成员，是因为内部类持有了一个外部类的引用。格式：外部类名.this
2，外部类要访问内部类，必须要建立内部类对象。
访问格式：
1，当内部类定义在外部类的成员位置上。而且非私有。可以在外部其他类中。建立内部类对象。
格式：
外部类名.内部类名 变量名= 外部类对象.内部类对象;
    Outer.Inner in = new Outer().new Inner();
2，当内部类在成员位置上。就可以被成员修饰符所修饰。
    比如。private：将内部类在外部类中进行封装
              static:内部类就具备了静态的特性。当内部类被static修饰的时候。就只能访问外部类中的静态成员。
    在外部其他类中。如何直接访问静态内部类非静态成员呢！
        new Outer,Inner().function();
    在外部其他类中。如何直接访问静态内部类的静态成员呢！
        Outer.inner.function();
注意：当内部类中定义了静态成员，该内部类必须是静态的！
        当外部类中的静态方法访问内部类时。内部类也必须是静态的！

当描述事物时。事物的内部还有事物。该事物用内部类来描述。因为内部事物。在使用外部事物中的内容！
内部类定义在局部时
1，不可以被成员修饰符修饰
2，可以直接访问外部类中的成员，因为还持有外部类中的引用。但是，不可以访问它所在的局部中的变量。只能访问被final修饰的局部变量。

匿名内部类
1，匿名内部类其实就是内部类的简写格式。
2，定义匿名内部类的前提
    1，内部类必须继承一个类。或者实现接口。
3，匿名内部类的格式
    new 父类或者接口()
{
    定义子类的内容
}
4，其实匿名内部类就是一个匿名子类对象。而且这个对象有点“胖”！可以理解为带内容的对象。
5，匿名内部类中定义的方法最好不要超过3个！
    
    

内部类可以被私有化。外部类不能别私有化