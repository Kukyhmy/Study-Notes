关于xml的约束(DTD)
为什么需要约束
	规范xml中的元素。
快速入门
	后缀名为.dtd
	步骤：
		1,看xml中有多少个元素.就在dtd文件中写几个<!ELEMENT>
		2,判断元素是简单元素还是复杂元素
			简单元素--没有子元素
			<!ELEMENT 元素名称 (#PCDATA)>
			复杂元素--拥有子元素
			<!ELEMENT 元素名称 (子元素,子元素)>
		3,在xml文件中引入DTD文件
			<!DOCTYPE 根元素名称 SYSTEM "DTD文件路径">
		**浏览器打开xml文件。浏览器不负责校验约束。它只负责校验语法**
		**如果我们想要校验xml约束。就要用工具。**
			MyEclipse等工具
			创建JAVA项目
			创建xml文件以及dtd文件。
			当xml引入了dtd文件后。如果不按照约束进行操作。那么会提示错误。
DTD的三种引入方法！
1,引入外部的DTD文件
<!DOCTYPE 根元素名称 SYSTEM "DTD文件路径">
2,试用内部的DTD文件
<!DOCTYPE[
	<!ELEMENT ...>
	<!ELEMENT ...>
]>
3,使用网络上的DTD文件
<!DOCTYPE 根元素 PUBLIC "DTD名称" "DTD文档的URL">
	--后面的strus框架会用到

**********使用DTD定义xml的元素**********
	*简单元素
		语法<!ELEMENT 元素名 约束>
		<!ELEMENT name (#PCDATA)>
		**(#PCDATA):约束只能是字符串类型。(带括号噢)
		**EMPTY:元素为空。没有内容(不带括号噢)
		**ANY:任意类型的数据都可以。可以为空(不带括号噢)
	*复杂元素--- + ? *
		语法<!ELEMENT 元素名 (子元素1,子元素2,子元素3... ...)>
		<!ELEMENT person (name,sex,age)>
			--子元素只能出现一次
		<!ELEMENT person (name+)>
			--表示name最少出现一次。可以n个！
		<!ELEMENT person (name?)>
			--表示name出现0次，或者1次！(枚举啊)
		<!ELEMENT person (name*)>
			--表示name出现0次。或者多次。
		----还要必须按照子元素的顺序来。子元素1,2,3... ...。,逗号，其实就是决定了他们的顺序。
		也可以用
		<!ELEMENT person (name|sex|age)>
			--只能出现三个子元素其中的一个。(枚举)
**********使用DTD来定义xml属性**********
语法：
	<!ATTLIST 元素名称 
		属性的名称 属性的类型 属性的约束
	>
例
	<!ATTLIST name
		ID CDATA #REQUIRED
	>
	<name ID='AAA'>Kevin</name>
-----------------------------------
属性的类型
	CDATA:表示属性是一个字符串
	(aa|bb|cc):表示属性只能是其中一个。枚举。
	ID:它的值只能是字母或者下划线开头！
属性的约束
	#REQUIRED:表示该属性必须出现
	#IMPLIED:表示属性可有可无
	#FIXED "值":表示这个属性的值必须是这个约束指定的值！
	约束位置直接是一个值:表示如果该元素的这个属性没有赋值的话。那么就是直接使用这个约束的值！如果了写了。那么就是你写的值！
**********定义引用实体**********
概念:在DTD中定义，在xml中使用
语法:<!ENTITY 实体名称 "实体内容">
引用方法(注意是在xml中使用):&实体名称;
例:
	<!ENTITY TEST "KevinBlandy">
		--DTD文件中
	<name>&TEST;</name>
		--XML文件中
	--把KevinBlandy这个值放入(显示在)了name标签中。
	--区分大小写
!!!!!!	--定义的实体。只能写在内部DTD里面！如果写在外部DTD文件中。
	在某些浏览器中。可能会获取不到值！
	


