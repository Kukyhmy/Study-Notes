http协议的再介绍
1,http协议是建立在TCP/IP协议基础之上的。
2,http协议全称"超文本传输协议"。
3,http1.0	短短接(持续时间短)。这个版本是通用的。是目前使用率最高的。
4,http1.1	长连接(持续时间长)。
----------------------------------------------------------------------------http请求
http的请求部分	――  基本结构
请求行(get请求没有请求体)
多个消息头
	消息名:内容
	并不是每一次请求，消息头都是一样的！
空行
内容
	内容名字:内容体
--------------------------------------详解Http消息头
Accept:text/html,image  
	告诉服务器,我可以接受文本，网页，还有图片
Accept-Charset:ISO-8859-1
	告诉服务器。我接受的字符编码是ISO-8859-1
Accept-Encoding:gzip,compress
	告诉服务器。我支持的压缩数据格式
Accpet-Language:en-us,zh-cn
	告诉服务器，我支持的语言格式
Host:localhost:8080
	告诉服务器，我要找的主机是谁
If-Modified-Since:Tue , 11 Jul 2015 18:23:51 GTM
	告诉服务器。我这里缓存着这个资源文件。时间就是这个。如果你更新了就给我新的。如果你没更新。那就不要了。我直接上缓存
referer:http://www.localhost:8080/index.jsp
	告诉服务器。我来自哪里。[此消息头常用于-防止盗链/统计来源]
	从地址栏输入的地址访问。那么这个值是空！
	地址栏手写发出的都没这个头
User-Agent:Mozilla/4.0(compatible;MSIE 5.5;Windos NT 5.0)
	告诉服务器，我(浏览器)的内核。以及操作系统信息。
Cookie
	--
Connection:close/Keep-Alive
	告诉服务器，我保持长连接。发完数据，不关闭连接
Date:Tue,11 jul 2015 13:56:25 GMT
	我发送这个消息头的时间。
----------------------------------------------------------------------------http响应
http的响应部分	――  基本结构
协议/版本
状态行
	格式:http版本号，状态码，原因叙述<CRLF>
	状态码用于表示服务器对请求的处理结果，它是一个三位数的十进制数。分为5类。
	100-199		表示成功接收请求，要求客户端继续提交下一次请求才能完成整个处理过程
	200-299		表示成功接收请求并已完成整个处理过程，常用200
	300-399		为完成请求，客户需要进一步细化请求。例如，请求的资源已经移动一个新地址，常用302,307
	400-499		客户端的请求有错误 常用404
	500-599		服务器出现错误。常用500
多个消息头
空行
实体内容

--------------------------------------详解Http响应――消息头
Location:http://localhost:8080
	当状态码是302的时候。必须发送这个Location头！！！
	告诉浏览器，你应该去找这个资源.让浏览器重新定位URL
Server:apache tomcat
	告诉浏览器，服务器是汤姆凯特
Content-Encoding:gzip
	告诉浏览器，我返回的数据压缩格式是gzip
Content-Length:80
	告诉浏览器我返回的数据大小是80个字节
Content-Language:zh-ch
	告诉浏览器。我至此中文
Content-Type:text/html;charset=GB2312
	告诉浏览器。内容的格式是文本，html格式的。编码是GB2312
Last-Modified:Tue,11 Jul 2015 12:21:25 GMT
	告诉浏览器。数据的最后更新时间。
Refresh:1;url=http://localhost:8080/Test
	告诉浏览器。过多久后刷新(转)到该URL。
Content-Disposition:attachent;filename=aaa.zip
	告诉浏览器。有文件需要你下载。
Transfer-Encoding:chunked
	告诉浏览器。传输编码(校验)
Set-Cookie:
	--
Expires:-1
	告诉浏览器如何缓存数据(页面)--ie识别
Cache-Control:no-cache
	告诉浏览器如何缓存数据(页面)--火狐等其他浏览器识别的
Pragma:no-cache
	告诉浏览器如何缓存数据(页面)
	[因为每个浏览器识别的缓存是不一样的。而又不知道客户拿什么浏览器访问。所以，直接把所有的可以识别的缓存全出输出，自己选]
Connection:close/Keep-Alive
	告诉浏览器。保持连接
Date:Tue,11 Jul 2015 17:05:26 GMT
	告诉浏览器。我回应这个的时间
-----------------------------------------------------------通用的信息头。既可以用于请求头，也可以用于响应头
Cache-Control:no-cachae
Pragma:no-cache
Connection:close/Keep-Alive
Date:... ...	

	

