ServletResponse
	常用方法
setStatus();
setHeader();
------------向客户端发送数据
getWriter();
	返回一个PrintWriter();对象
	用于向客户机回送字符(文本)数据
getOuputStream();
	用于向客户机会送字符数据/字节数据(二进制)
怎么选择以上两个？
	原则：如果我们会送字符数据，那么就使用getWriter();因为它对字符的处理效率比较高
	      如果我们会送字节数组。那么只能使用getOutputStream();
	注意：这两个流，不能同时使用！否则会挂！
	原因：当WEB服务器收到浏览器的请求之后。会找寻相关的资源。找到资源以后。发现资源里面有PrintWrite或者OutputStream后。会把数据传到WEB服务器！
	WEB服务器进行数据拆解。形成Http响应头。返回给浏览器。并且它会检测你的流是否关闭。如果没有关闭WEB服务器会自动帮你进行关闭！那么后面的流就没机会发送数据了。
	(从这里也可以看出，WEB服务器会自动帮你关闭流！但是我们还是建议主动关闭比较妥当)
------------向客户端发送数据
sendRedirect();
	实现请求重定向(把浏览器的数据带给下一个页面)。就是老子不管，你找他！
	告诉浏览器重新去找！别找我！
	使用这种方法。能转发到该WEB应用之外的URL
response.sendRedirect("wlecome?name=kevin&sex=boy");
	把该信息传递给welecome这个页面。
优点-传输信息的速度比较快
确定-它只能传输字符串，而不能传送一个对象
注意：1,welcom代表你要跳转到哪个Servlet
      2,servlet URL名和变量名之间有问号隔开
      3,如果传递两个以上的值。他们之间用&隔开
      4,如果传递的是中文。那么会有乱码的问题需要处理
String 参数 = request.getparameter("参数名");
	Servlet接收端
getSession();
	request.getSession().setAttribute("参数名","值");
	[比较复杂。后面讲解]--简单了解一下先还是
这个方法不仅可以传递字符串。还可以传递对象。
----------除了上面的以为其他的一些应用
发送http头。控制浏览器禁止缓存当前文档内容
文件下载
生成随机验证码
----------小结
通过HttpServletResponse 回送的http头！可以控制浏览器的行为！
通过HttpServletResponse 提供的函数可以完成例如随机验证码，下载等功能！
     
